name: Build
on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  # On main, we don't want any jobs cancelled so the sha is used to name the group
  # On PR branches, we cancel the job if new commits are pushed
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ (github.ref == 'refs/heads/main') && format('{0}-{1}', github.workflow_ref, github.sha) || format('{0}-{1}', github.workflow_ref, github.head_ref) }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: read
      checks: write # for publishing test results and annotations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v6
        with:
          go-version: 1.24.6

      - name: Build
        run: go build .

      - name: Check gofmt
        run: |
          UNFORMATTED=$(gofmt -s -l .)
          if [ -n "$UNFORMATTED" ]; then
            echo "The following files are not gofmt-ed:"
            echo "$UNFORMATTED"
            exit 1
          fi

      - name: Test
        run: go test ./... -coverprofile=./cover.out -covermode=atomic

      - name: Check Test Coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml

  docker:
    if: ${{ github.repository == 'permissionizer/server' }}
    needs: build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    uses: ./.github/workflows/reusable-docker-build.yaml
    with:
      push: ${{ github.event_name != 'pull_request' }}

  deploy:
    if: ${{ github.repository == 'permissionizer/server' && github.event_name != 'pull_request' }}
    needs: docker
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/reusable-deploy-cloud-run.yaml
    secrets: inherit
    with:
      # Using the digest instead of tag 'main' to ensure Cloud Run does not deploy the old image
      image: permissionizer/server@${{ needs.docker.outputs.digest }}
